[1mdiff --git a/editor-backend/Routes/codeRun.js b/editor-backend/Routes/codeRun.js[m
[1mindex cadd330..8b535d3 100755[m
[1m--- a/editor-backend/Routes/codeRun.js[m
[1m+++ b/editor-backend/Routes/codeRun.js[m
[36m@@ -27,7 +27,7 @@[m [mrouter.post('/run', (req, res) => {[m
     // Step 2: Execute child process to generate output[m
     Promise.all([sourceFile, inputFile]).then(response => {[m
         // exec opens a new terminal and executes the command[m
[31m-        const command = `g++ ${id}.cpp -o out_${id} && ./out_${id} < ${id}.txt`;[m
[32m+[m[32m        const command = `g++ ${id}.cpp -o ${id}.out && ./${id}.out < ${id}.txt`;[m
         exec(command, (error, stdout, stderr) => {[m
             // console.log({stdout}, {stderr});[m
             //Step 3: Delete source, input and out file. [m
[36m@@ -47,7 +47,7 @@[m [mrouter.post('/run', (req, res) => {[m
                 //out file will not be generated when error occurs.s[m
                 if (stderr)[m
                     resolve('No need to delete out file');[m
[31m-                fs.unlink(`out_${id}`, err => {[m
[32m+[m[32m                fs.unlink(`${id}.out`, err => {[m
                     if (err) reject(err);[m
                     resolve('Removed out file');[m
                 });[m
[1mdiff --git a/editor-backend/index.js b/editor-backend/index.js[m
[1mindex 1d89d46..637d0a0 100755[m
[1m--- a/editor-backend/index.js[m
[1m+++ b/editor-backend/index.js[m
[36m@@ -29,7 +29,6 @@[m [mconst server = app.listen(PORT, () => console.log(`Server started on port ${PORT[m
 // listen to incoming websocket[m
 const wss = new WebSocket.Server({ server: server });[m
 wss.on('connection', ws => {[m
[31m-    console.log('connection',ws)[m
     const stream = new WebSocketJSONStream(ws);[m
     share.listen(stream);[m
 });[m
[1mdiff --git a/editor-backend/package-lock.json b/editor-backend/package-lock.json[m
[1mindex abfec76..4880183 100755[m
[1m--- a/editor-backend/package-lock.json[m
[1m+++ b/editor-backend/package-lock.json[m
[36m@@ -429,11 +429,6 @@[m
       "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",[m
       "integrity": "sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM="[m
     },[m
[31m-    "uuid": {[m
[31m-      "version": "8.1.0",[m
[31m-      "resolved": "https://registry.npmjs.org/uuid/-/uuid-8.1.0.tgz",[m
[31m-      "integrity": "sha512-CI18flHDznR0lq54xBycOVmphdCYnQLKn8abKn7PXUiKUGdEd+/l9LWNJmugXel4hXq7S+RMNl34ecyC9TntWg=="[m
[31m-    },[m
     "vary": {[m
       "version": "1.1.2",[m
       "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",[m
[1mdiff --git a/editor-backend/package.json b/editor-backend/package.json[m
[1mindex 208d6cc..c127bf9 100755[m
[1m--- a/editor-backend/package.json[m
[1m+++ b/editor-backend/package.json[m
[36m@@ -15,7 +15,6 @@[m
     "cors": "^2.8.5",[m
     "express": "^4.17.1",[m
     "sharedb": "^1.3.4",[m
[31m-    "uuid": "^8.1.0",[m
     "ws": "^7.3.0"[m
   }[m
 }[m
[1mdiff --git a/editor/src/Containers/stringBinding.js b/editor/src/Containers/stringBinding.js[m
[1mindex a2856a7..dd2a429 100755[m
[1m--- a/editor/src/Containers/stringBinding.js[m
[1m+++ b/editor/src/Containers/stringBinding.js[m
[36m@@ -20,22 +20,20 @@[m [mclass StringBinding extends TextDiffBinding {[m
   };[m
 [m
   attachElement = () => {[m
[31m-    var binding = this;[m
     this._inputListener = (prevValue, newValue, e) => {[m
[31m-      binding.onInput(prevValue, newValue, e);[m
[32m+[m[32m      this.onInput(prevValue, newValue, e);[m
     };[m
     this._outListener = (before, output) => {[m
[31m-      binding._insertOut(before, output);[m
[32m+[m[32m      this._insertOut(before, output);[m
     }[m
     this._inListener = (before, input) => {[m
[31m-      binding._insertIn(before, input);[m
[32m+[m[32m      this._insertIn(before, input);[m
     }[m
   };[m
 [m
   attachDoc = () => {[m
[31m-    var binding = this;[m
     this._opListener = (op, source) => {[m
[31m-      binding._onOp(op, source);[m
[32m+[m[32m      this._onOp(op, source);[m
     };[m
     this.doc.on('op', this._opListener);[m
   };[m
